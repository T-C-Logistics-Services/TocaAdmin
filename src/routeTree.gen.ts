/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as authOtpRouteImport } from './routes/(auth)/otp'
import { Route as authGoogleRouteImport } from './routes/(auth)/google'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as AuthenticatedSettingsRouteRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedUsersIndexRouteImport } from './routes/_authenticated/users/index'
import { Route as AuthenticatedTasksIndexRouteImport } from './routes/_authenticated/tasks/index'
import { Route as AuthenticatedSettingsIndexRouteImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedParcelPickUpIndexRouteImport } from './routes/_authenticated/parcel-pick-up/index'
import { Route as AuthenticatedOnDemandParcelIndexRouteImport } from './routes/_authenticated/on-demand-parcel/index'
import { Route as AuthenticatedMonitoringIndexRouteImport } from './routes/_authenticated/monitoring/index'
import { Route as AuthenticatedHubsIndexRouteImport } from './routes/_authenticated/hubs/index'
import { Route as AuthenticatedHelpCenterIndexRouteImport } from './routes/_authenticated/help-center/index'
import { Route as AuthenticatedFinanceIndexRouteImport } from './routes/_authenticated/finance/index'
import { Route as AuthenticatedDriversIndexRouteImport } from './routes/_authenticated/drivers/index'
import { Route as AuthenticatedDeliveryStatisticsIndexRouteImport } from './routes/_authenticated/delivery-statistics/index'
import { Route as AuthenticatedCustomersIndexRouteImport } from './routes/_authenticated/customers/index'
import { Route as AuthenticatedChatsIndexRouteImport } from './routes/_authenticated/chats/index'
import { Route as AuthenticatedBookingsIndexRouteImport } from './routes/_authenticated/bookings/index'
import { Route as AuthenticatedAppsIndexRouteImport } from './routes/_authenticated/apps/index'
import { Route as AuthenticatedSettingsNotificationsRouteImport } from './routes/_authenticated/settings/notifications'
import { Route as AuthenticatedSettingsDisplayRouteImport } from './routes/_authenticated/settings/display'
import { Route as AuthenticatedSettingsAppearanceRouteImport } from './routes/_authenticated/settings/appearance'
import { Route as AuthenticatedSettingsAccountRouteImport } from './routes/_authenticated/settings/account'
import { Route as AuthenticatedBookingsBookingIdDriverRouteImport } from './routes/_authenticated/bookings/$bookingId/driver'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const authOtpRoute = authOtpRouteImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRouteImport,
} as any)
const authGoogleRoute = authGoogleRouteImport.update({
  id: '/(auth)/google',
  path: '/google',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSettingsRouteRoute =
  AuthenticatedSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedTasksIndexRoute = AuthenticatedTasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedSettingsIndexRoute =
  AuthenticatedSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedParcelPickUpIndexRoute =
  AuthenticatedParcelPickUpIndexRouteImport.update({
    id: '/parcel-pick-up/',
    path: '/parcel-pick-up/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedOnDemandParcelIndexRoute =
  AuthenticatedOnDemandParcelIndexRouteImport.update({
    id: '/on-demand-parcel/',
    path: '/on-demand-parcel/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedMonitoringIndexRoute =
  AuthenticatedMonitoringIndexRouteImport.update({
    id: '/monitoring/',
    path: '/monitoring/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedHubsIndexRoute = AuthenticatedHubsIndexRouteImport.update({
  id: '/hubs/',
  path: '/hubs/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedHelpCenterIndexRoute =
  AuthenticatedHelpCenterIndexRouteImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedFinanceIndexRoute =
  AuthenticatedFinanceIndexRouteImport.update({
    id: '/finance/',
    path: '/finance/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedDriversIndexRoute =
  AuthenticatedDriversIndexRouteImport.update({
    id: '/drivers/',
    path: '/drivers/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedDeliveryStatisticsIndexRoute =
  AuthenticatedDeliveryStatisticsIndexRouteImport.update({
    id: '/delivery-statistics/',
    path: '/delivery-statistics/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedCustomersIndexRoute =
  AuthenticatedCustomersIndexRouteImport.update({
    id: '/customers/',
    path: '/customers/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedChatsIndexRoute = AuthenticatedChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedBookingsIndexRoute =
  AuthenticatedBookingsIndexRouteImport.update({
    id: '/bookings/',
    path: '/bookings/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAppsIndexRoute = AuthenticatedAppsIndexRouteImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedSettingsNotificationsRoute =
  AuthenticatedSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsDisplayRoute =
  AuthenticatedSettingsDisplayRouteImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAppearanceRoute =
  AuthenticatedSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAccountRoute =
  AuthenticatedSettingsAccountRouteImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedBookingsBookingIdDriverRoute =
  AuthenticatedBookingsBookingIdDriverRouteImport.update({
    id: '/bookings/$bookingId/driver',
    path: '/bookings/$bookingId/driver',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/google': typeof authGoogleRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/bookings': typeof AuthenticatedBookingsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/customers': typeof AuthenticatedCustomersIndexRoute
  '/delivery-statistics': typeof AuthenticatedDeliveryStatisticsIndexRoute
  '/drivers': typeof AuthenticatedDriversIndexRoute
  '/finance': typeof AuthenticatedFinanceIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/hubs': typeof AuthenticatedHubsIndexRoute
  '/monitoring': typeof AuthenticatedMonitoringIndexRoute
  '/on-demand-parcel': typeof AuthenticatedOnDemandParcelIndexRoute
  '/parcel-pick-up': typeof AuthenticatedParcelPickUpIndexRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/bookings/$bookingId/driver': typeof AuthenticatedBookingsBookingIdDriverRoute
}
export interface FileRoutesByTo {
  '/forgot-password': typeof authForgotPasswordRoute
  '/google': typeof authGoogleRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/bookings': typeof AuthenticatedBookingsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/customers': typeof AuthenticatedCustomersIndexRoute
  '/delivery-statistics': typeof AuthenticatedDeliveryStatisticsIndexRoute
  '/drivers': typeof AuthenticatedDriversIndexRoute
  '/finance': typeof AuthenticatedFinanceIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/hubs': typeof AuthenticatedHubsIndexRoute
  '/monitoring': typeof AuthenticatedMonitoringIndexRoute
  '/on-demand-parcel': typeof AuthenticatedOnDemandParcelIndexRoute
  '/parcel-pick-up': typeof AuthenticatedParcelPickUpIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/bookings/$bookingId/driver': typeof AuthenticatedBookingsBookingIdDriverRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/google': typeof authGoogleRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexRoute
  '/_authenticated/bookings/': typeof AuthenticatedBookingsIndexRoute
  '/_authenticated/chats/': typeof AuthenticatedChatsIndexRoute
  '/_authenticated/customers/': typeof AuthenticatedCustomersIndexRoute
  '/_authenticated/delivery-statistics/': typeof AuthenticatedDeliveryStatisticsIndexRoute
  '/_authenticated/drivers/': typeof AuthenticatedDriversIndexRoute
  '/_authenticated/finance/': typeof AuthenticatedFinanceIndexRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexRoute
  '/_authenticated/hubs/': typeof AuthenticatedHubsIndexRoute
  '/_authenticated/monitoring/': typeof AuthenticatedMonitoringIndexRoute
  '/_authenticated/on-demand-parcel/': typeof AuthenticatedOnDemandParcelIndexRoute
  '/_authenticated/parcel-pick-up/': typeof AuthenticatedParcelPickUpIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
  '/_authenticated/bookings/$bookingId/driver': typeof AuthenticatedBookingsBookingIdDriverRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/settings'
    | '/forgot-password'
    | '/google'
    | '/otp'
    | '/sign-in'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/apps'
    | '/bookings'
    | '/chats'
    | '/customers'
    | '/delivery-statistics'
    | '/drivers'
    | '/finance'
    | '/help-center'
    | '/hubs'
    | '/monitoring'
    | '/on-demand-parcel'
    | '/parcel-pick-up'
    | '/settings/'
    | '/tasks'
    | '/users'
    | '/bookings/$bookingId/driver'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/forgot-password'
    | '/google'
    | '/otp'
    | '/sign-in'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/apps'
    | '/bookings'
    | '/chats'
    | '/customers'
    | '/delivery-statistics'
    | '/drivers'
    | '/finance'
    | '/help-center'
    | '/hubs'
    | '/monitoring'
    | '/on-demand-parcel'
    | '/parcel-pick-up'
    | '/settings'
    | '/tasks'
    | '/users'
    | '/bookings/$bookingId/driver'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/google'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/apps/'
    | '/_authenticated/bookings/'
    | '/_authenticated/chats/'
    | '/_authenticated/customers/'
    | '/_authenticated/delivery-statistics/'
    | '/_authenticated/drivers/'
    | '/_authenticated/finance/'
    | '/_authenticated/help-center/'
    | '/_authenticated/hubs/'
    | '/_authenticated/monitoring/'
    | '/_authenticated/on-demand-parcel/'
    | '/_authenticated/parcel-pick-up/'
    | '/_authenticated/settings/'
    | '/_authenticated/tasks/'
    | '/_authenticated/users/'
    | '/_authenticated/bookings/$bookingId/driver'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authGoogleRoute: typeof authGoogleRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/google': {
      id: '/(auth)/google'
      path: '/google'
      fullPath: '/google'
      preLoaderRoute: typeof authGoogleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/parcel-pick-up/': {
      id: '/_authenticated/parcel-pick-up/'
      path: '/parcel-pick-up'
      fullPath: '/parcel-pick-up'
      preLoaderRoute: typeof AuthenticatedParcelPickUpIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/on-demand-parcel/': {
      id: '/_authenticated/on-demand-parcel/'
      path: '/on-demand-parcel'
      fullPath: '/on-demand-parcel'
      preLoaderRoute: typeof AuthenticatedOnDemandParcelIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/monitoring/': {
      id: '/_authenticated/monitoring/'
      path: '/monitoring'
      fullPath: '/monitoring'
      preLoaderRoute: typeof AuthenticatedMonitoringIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/hubs/': {
      id: '/_authenticated/hubs/'
      path: '/hubs'
      fullPath: '/hubs'
      preLoaderRoute: typeof AuthenticatedHubsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/finance/': {
      id: '/_authenticated/finance/'
      path: '/finance'
      fullPath: '/finance'
      preLoaderRoute: typeof AuthenticatedFinanceIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/drivers/': {
      id: '/_authenticated/drivers/'
      path: '/drivers'
      fullPath: '/drivers'
      preLoaderRoute: typeof AuthenticatedDriversIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/delivery-statistics/': {
      id: '/_authenticated/delivery-statistics/'
      path: '/delivery-statistics'
      fullPath: '/delivery-statistics'
      preLoaderRoute: typeof AuthenticatedDeliveryStatisticsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/customers/': {
      id: '/_authenticated/customers/'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof AuthenticatedCustomersIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/chats/': {
      id: '/_authenticated/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AuthenticatedChatsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/bookings/': {
      id: '/_authenticated/bookings/'
      path: '/bookings'
      fullPath: '/bookings'
      preLoaderRoute: typeof AuthenticatedBookingsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/bookings/$bookingId/driver': {
      id: '/_authenticated/bookings/$bookingId/driver'
      path: '/bookings/$bookingId/driver'
      fullPath: '/bookings/$bookingId/driver'
      preLoaderRoute: typeof AuthenticatedBookingsBookingIdDriverRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute
  AuthenticatedSettingsAppearanceRoute: typeof AuthenticatedSettingsAppearanceRoute
  AuthenticatedSettingsDisplayRoute: typeof AuthenticatedSettingsDisplayRoute
  AuthenticatedSettingsNotificationsRoute: typeof AuthenticatedSettingsNotificationsRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
    AuthenticatedSettingsAppearanceRoute: AuthenticatedSettingsAppearanceRoute,
    AuthenticatedSettingsDisplayRoute: AuthenticatedSettingsDisplayRoute,
    AuthenticatedSettingsNotificationsRoute:
      AuthenticatedSettingsNotificationsRoute,
    AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAppsIndexRoute: typeof AuthenticatedAppsIndexRoute
  AuthenticatedBookingsIndexRoute: typeof AuthenticatedBookingsIndexRoute
  AuthenticatedChatsIndexRoute: typeof AuthenticatedChatsIndexRoute
  AuthenticatedCustomersIndexRoute: typeof AuthenticatedCustomersIndexRoute
  AuthenticatedDeliveryStatisticsIndexRoute: typeof AuthenticatedDeliveryStatisticsIndexRoute
  AuthenticatedDriversIndexRoute: typeof AuthenticatedDriversIndexRoute
  AuthenticatedFinanceIndexRoute: typeof AuthenticatedFinanceIndexRoute
  AuthenticatedHelpCenterIndexRoute: typeof AuthenticatedHelpCenterIndexRoute
  AuthenticatedHubsIndexRoute: typeof AuthenticatedHubsIndexRoute
  AuthenticatedMonitoringIndexRoute: typeof AuthenticatedMonitoringIndexRoute
  AuthenticatedOnDemandParcelIndexRoute: typeof AuthenticatedOnDemandParcelIndexRoute
  AuthenticatedParcelPickUpIndexRoute: typeof AuthenticatedParcelPickUpIndexRoute
  AuthenticatedTasksIndexRoute: typeof AuthenticatedTasksIndexRoute
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
  AuthenticatedBookingsBookingIdDriverRoute: typeof AuthenticatedBookingsBookingIdDriverRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAppsIndexRoute: AuthenticatedAppsIndexRoute,
  AuthenticatedBookingsIndexRoute: AuthenticatedBookingsIndexRoute,
  AuthenticatedChatsIndexRoute: AuthenticatedChatsIndexRoute,
  AuthenticatedCustomersIndexRoute: AuthenticatedCustomersIndexRoute,
  AuthenticatedDeliveryStatisticsIndexRoute:
    AuthenticatedDeliveryStatisticsIndexRoute,
  AuthenticatedDriversIndexRoute: AuthenticatedDriversIndexRoute,
  AuthenticatedFinanceIndexRoute: AuthenticatedFinanceIndexRoute,
  AuthenticatedHelpCenterIndexRoute: AuthenticatedHelpCenterIndexRoute,
  AuthenticatedHubsIndexRoute: AuthenticatedHubsIndexRoute,
  AuthenticatedMonitoringIndexRoute: AuthenticatedMonitoringIndexRoute,
  AuthenticatedOnDemandParcelIndexRoute: AuthenticatedOnDemandParcelIndexRoute,
  AuthenticatedParcelPickUpIndexRoute: AuthenticatedParcelPickUpIndexRoute,
  AuthenticatedTasksIndexRoute: AuthenticatedTasksIndexRoute,
  AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
  AuthenticatedBookingsBookingIdDriverRoute:
    AuthenticatedBookingsBookingIdDriverRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authGoogleRoute: authGoogleRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
